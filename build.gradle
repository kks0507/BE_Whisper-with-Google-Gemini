plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.2'
	id 'io.spring.dependency-management' version '1.1.6'
}

group = 'me.gskim'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	// Spring Boot dependencies
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-validation'

	implementation 'com.fasterxml.jackson.core:jackson-databind'
	implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310'

    // Lombok dependencies
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    testAnnotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.projectlombok:lombok'

    // Development tools
    developmentOnly 'org.springframework.boot:spring-boot-devtools'

    // Database dependencies
    runtimeOnly 'com.mysql:mysql-connector-j'
    implementation 'com.zaxxer:HikariCP'

    // Testing dependencies
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    // JWT dependencies
    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'

    // JSON handling
    implementation 'com.google.code.gson:gson:2.8.6'

    // OpenAPI dependencies
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.6.0'

    // Model Mapper
    implementation 'org.modelmapper:modelmapper:3.2.0'
    
}

tasks.withType(JavaCompile) {
    options.compilerArgs += ['-parameters']
}

tasks.named('test') {
	useJUnitPlatform()
}



